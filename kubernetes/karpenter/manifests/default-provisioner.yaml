apiVersion: karpenter.k8s.aws/v1alpha1
kind: AWSNodeTemplate
metadata:
  name: karpenter-default
spec:
  instanceProfile: ${iam-instance-profile-id}
  subnetSelector:
    Name: "${eks-vpc_name}-private*"
    kubernetes.io/role/internal-elb: '1' 
  securityGroupSelector:
    aws:eks:cluster-name: ${eks-cluster-id}
  tags:
    karpenter.sh/cluster_name: ${eks-cluster-id}
    karpenter.sh/provisioner: default

---

apiVersion: karpenter.sh/v1alpha5
kind: Provisioner
metadata:
  name: default
spec:
  ttlSecondsUntilExpired: 604800 # expire nodes after 7 days (in seconds) = 7 * 60 * 60 * 24
  # ttlSecondsUntilExpired: 3600  # 1hour, for testing the behavior
  ttlSecondsAfterEmpty: 60 # scale down nodes after 60 seconds without workloads (excluding daemons)
  # consolidation:
  #   enabled: true
  requirements:
    - key: 'kubernetes.io/arch'
      operator: In
      values: ['amd64']
    - key: karpenter.sh/capacity-type
      operator: In
      # values: [ 'spot', 'on-demand']
      values: [ 'spot']
    # Include general purpose instance families
    - key: karpenter.k8s.aws/instance-family
      operator: In
      # values: [c5, m5, r5]
      values: [ t2, t3 ]
    - key: karpenter.k8s.aws/instance-size
      operator: In
      values: [medium, large]
  providerRef:
    name: karpenter-default      
  limits:
    resources:
      cpu: '200'
  labels:
    type: karpenter
    provisioner: default
  # taints:
  #   - key: karpenter
  #     value: 'true'
  #     effect: NoSchedule
